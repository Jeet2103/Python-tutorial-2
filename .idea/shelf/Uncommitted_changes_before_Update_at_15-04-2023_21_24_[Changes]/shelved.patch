Index: map,filter,reduce.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/map,filter,reduce.py b/map,filter,reduce.py
new file mode 100644
--- /dev/null	(date 1681556718044)
+++ b/map,filter,reduce.py	(date 1681556718044)
@@ -0,0 +1,23 @@
+# Map,Filater and Reduce -------> Specially work for itrated function
+# MAP
+# def cube(x):
+#     return x*x*x
+l= [1,2,3,4,5,6,7,8,9,10]
+# newl=[]
+# for items in l:
+#     newl.append(cube(items))   # When I want to append any elements in the list
+newl1= list(map(lambda x: x*x*x,l))
+newl2= list(map(lambda x:(2+x)/2,l))
+print(newl1)
+print(newl2)
+#FILTER
+# def filter_function(x):
+    # return x>2
+
+from functools import reduce
+newnewl= list(filter(lambda x: x>2,l))
+print(newnewl)
+#REDUCE ---------> Work as a recursion function
+numbers= [2,3,4,56,34,569]
+sum = reduce(lambda x,y : (x+y),numbers)
+print(sum)
\ No newline at end of file
Index: snake_water_gun.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/snake_water_gun.py b/snake_water_gun.py
new file mode 100644
--- /dev/null	(date 1681573691097)
+++ b/snake_water_gun.py	(date 1681573691097)
@@ -0,0 +1,22 @@
+import random
+comp = random.randint(0,2)
+user = int (input("0. SNAKE         1. WATER        2. GUN\nINPUT :  "))
+def check(comp,user):
+    if (comp==user):
+        return 0
+    if (comp==0 and user ==1):
+        return -1
+    if (comp==1 and user==2):
+        return -1
+    if (comp==2 and user==0):
+        return -1
+    else:
+        return 1
+print("USER INPUT ---> ",user)
+print("COMPUTER INPUT ---> ",comp)
+if check(comp,user)==0:
+    print("The match is draw.")
+elif check(comp,user)==-1:
+    print("Damn ! You are a looser.")
+elif check(comp,user):
+    print("Congratulation ! You Win.")
\ No newline at end of file
Index: lambda_function.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lambda_function.py b/lambda_function.py
new file mode 100644
--- /dev/null	(date 1681537041230)
+++ b/lambda_function.py	(date 1681537041230)
@@ -0,0 +1,12 @@
+# Lambda Function is a small function.
+squre = lambda x : x*x
+cube = lambda x:x*x*x
+average = lambda x,y,z: (x+y+z)/3
+print(squre(5))
+print(cube(5))
+print(int(average(8,10,3)))
+def eqn(fx,value):
+    return 10 + fx(value)
+print(eqn(squre,9))
+print(eqn(lambda x:x*x*x,9))
+# So basically lambda is a small function which i can use in any small apply
\ No newline at end of file
